<?php

namespace Cai\WebBundle\Repository;

/**
 * EntradaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntradaRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAll(){
        return $this->getEntityManager()
            ->createQuery('SELECT e
                FROM CaiWebBundle:Entrada e
                ORDER BY e.fecha DESC
                '
            )
            ->getResult();
    }
    public function findOrderedByCategoria($categoria){
        return $this->getEntityManager()
            ->createQuery("SELECT e
                FROM CaiWebBundle:Entrada e
                LEFT JOIN e.categorias categorias
                WHERE categorias.id = :categoria
                AND e.fecha < :now
                AND e.publico = TRUE 
                ORDER BY e.fecha DESC
                "
            )->setParameter('now', new \DateTime())
            ->setParameter('categoria', $categoria->getId())
            ->getResult();
    }
    public function findAllOrdered(){
        return $this->getEntityManager()
            ->createQuery('SELECT e
                FROM CaiWebBundle:Entrada e
                WHERE e.fecha < :now
                AND e.publico = true
                ORDER BY e.fecha DESC
                '
            )->setParameter('now', new \DateTime())
            ->getResult();
    }
    public function findBySearchedText($text){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e
            FROM CaiWebBundle:Entrada e
            WHERE e.titulo LIKE :texto
            OR e.cuerpo LIKE :texto
            AND e.fecha < :now
            AND e.publico = true
          "
            )->setParameter('texto','%'.$text.'%')
            ->setParameter('now',new \DateTime())
            ->getResult();
    }
    public function findAllForHome(){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e
                FROM CaiWebBundle:Entrada e
                WHERE e.fecha < :now
                AND e.publico = true
                ORDER BY e.fecha DESC
                "
            )->setMaxResults(8)
            ->setParameter('now',new \DateTime())
            ->getResult();
    }
    public function findOneBySlugFront($slug){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e
                FROM CaiWebBundle:Entrada e
                WHERE e.slug = :slug
                AND e.fecha < :now
                AND e.publico = true"
            )->setParameter('slug',$slug)
            ->setParameter('now', new \DateTime())
            ->getOneOrNullResult();
    }
    public function findAllForUser($user){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e
                FROM CaiWebBundle:Entrada e
                LEFT JOIN e.categorias categoria
                WHERE e.fecha < :now
                AND categoria in (:categorias)
                AND e.publico = true
                ORDER BY e.fecha DESC"
            )->setMaxResults(8)
            ->setParameter('now',new \DateTime())
            ->setParameter('categorias',$user->getCategorias())
            ->getResult();
    }
}
